#go-app-deployment.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: pgo-go-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-backend
  namespace: pgo-go-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-backend
  template:
    metadata:
      labels:
        app: go-backend
    spec:
      serviceAccountName: go-backend-sa
      containers:
        - name: go-backend
          image: "tomtris02/go-app-backend:v1"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: go-backend
  namespace: pgo-go-backend
spec:
  selector:
    app: go-backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30002
  type: NodePort
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: go-backend-sa
  namespace: pgo-go-backend
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: go-backend-full-access
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: go-backend-access-binding
  namespace: postgres-operator
subjects:
  - kind: ServiceAccount
    name: go-backend-sa
    namespace: pgo-go-backend
roleRef:
  kind: ClusterRole
  name: go-backend-full-access
  apiGroup: rbac.authorization.k8s.io
  
